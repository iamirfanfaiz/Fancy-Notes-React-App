{"version":3,"sources":["components/note/Note.js","components/search/Search.js","components/note_container/NoteContainer.js","components/sidemenu/SideMenu.js","App.js","reportWebVitals.js","index.js"],"names":["timeout","note","props","updateText","text","id","func","clearTimeout","setTimeout","className","style","backgroundColor","color","defaultValue","onChange","event","target","value","time","IconButton","component","onClick","deleteNote","Search","Box","sx","display","alignItems","mr","my","TextField","label","variant","textSearch","NoteContainer","notesRevered","array","notesArray","i","length","push","reverse","notes","console","log","handleSearchText","map","item","index","SideMenu","useState","active","setActive","Fab","addNote","App","setNote","searchText","setSearchText","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","tempNotes","currentdate","Date","amPm","getHours","month","getMonth","datetime","getDate","getFullYear","getMinutes","getSeconds","now","Math","floor","random","filter","toLowerCase","includes","findIndex","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12af285d.chunk.js","sourcesContent":["import React from 'react'\nimport './Note.css';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\n\nlet timer = 500, timeout;\n\nfunction note(props) {\n\n    const debounce = (func) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(func, timer);\n    };\n\n    const updateText = (text, id) => {\n        debounce(() => props.updateText(text, id));\n    };\n\n    return (\n        <div className=\"note\" style={{ backgroundColor: props.note.color }}>\n\n          \n\n\n\n            <textarea defaultValue={props.note.text}\n                onChange={(event) => updateText(event.target.value, props.note.id)}\n                className=\"note_text\"></textarea>\n           \n            <div className=\"controls\">\n            <span className=\"date\">\n                {props.note.time}\n                </span>\n\n           <IconButton  \n            aria-label=\"delete note\" \n            component=\"span\"\n            onClick={() => props.deleteNote(props.note.id)}>\n                <DeleteOutlineIcon />\n            </IconButton>\n           </div>\n        </div>\n    )\n}\n\nexport default note\n","import React from 'react'\nimport './Search.css';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport SearchIcon from '@mui/icons-material/Search';\n\nfunction Search(props) {\n    return (\n        <div className=\"search-group\">\n            <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n                <SearchIcon sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\n                <TextField id=\"SearchNotes\" label=\"Search Notes\" variant=\"standard\" onChange={(event) => props.textSearch(event.target.value)} />\n            </Box>\n\n        </div>\n    )\n}\n\nexport default Search\n","import React from 'react'\nimport './NoteContainer.css';\nimport Note from '../note/Note';\nimport Search from '../search/Search';\n\n\nfunction NoteContainer(props) {\n\n    const reverse = function(array){\n        const notesArray = [];\n\n        for (var i = array.length-1; i >= 0; i--){\n            notesArray.push(array[i])\n        } \n        return notesArray\n    }\n\n    const notesRevered = reverse(props.notes);\n\n    console.log(notesRevered);\n\n\n    return (\n        <div className=\"note-container\">\n            <div className=\"header\">\n\n                <span>\n                    <h1>Notes</h1>\n                    {props.notes?.length > 0 ? '' : <div>No Notes Found</div>}\n                </span>\n\n         \n\n                <Search className=\"searchGroup\" textSearch={props.handleSearchText} />\n\n            </div>\n            <div className=\"note-container_notes\">\n\n                {props.notes?.length > 0 ? (\n                   notesRevered.map((item, index) => <Note key={item.id} note={item} deleteNote={props.deleteNote} updateText={props.updateText} />)\n                ) : ''\n                }\n\n            </div>\n        </div>\n    )\n}\n\nexport default NoteContainer\n","import React, { useState } from 'react'\nimport './SideMenu.css';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\n\nfunction SideMenu(props) {\n    const colors = [\"#EF5350\", \"#AB47BC\", \"#5C6BC0\", \"#29B6F6\", \"#66BB6A\"];\n    const [active, setActive] = useState(false);\n\n    return (\n        <div className=\"sidebar\">\n            <Fab onClick={() => setActive(!active)} color=\"primary\" aria-label=\"add\">\n                <AddIcon />\n            </Fab>\n\n            <ul className={`sidebar_list ${active ? \"sidebar_list_active\" : \"\"}`}>\n                {colors.map((item, index) =>\n                    <li onClick={() => props.addNote(item)} key={index} className=\"sidebar_list_item\" style={{ backgroundColor: item }}></li>\n                )}\n            </ul>\n        </div>\n    )\n}\n\nexport default SideMenu\n","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport NoteContainer from './components/note_container/NoteContainer';\n\nimport SideMenu from './components/sidemenu/SideMenu';\n\nfunction App() {\n\n  const [note, setNote] = useState([]);\n\n  const [searchText, setSearchText] = useState('');\n\n  const addNote = (color) => {\n    const tempNotes = [...note];\n\n    const currentdate = new Date();\n\n    let hrs = currentdate.getHours();\n    let amPm = hrs > 12 ? \"PM\" : \"AM\"\n\n    const monthName = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ]\n    const month = monthName[currentdate.getMonth()];\n\n    const datetime =\n      + currentdate.getDate() + \"/\"\n      + month + \"/\"\n      + currentdate.getFullYear() + \" @ \"\n      + currentdate.getHours() + \":\"\n      + currentdate.getMinutes() + \":\"\n      + currentdate.getSeconds() + \"\"\n      + amPm;\n\n    tempNotes.push({\n      id: Date.now() + \"\" + Math.floor(Math.random() * 78),\n      text: \"\",\n      time: datetime,\n      color\n    });\n\n    setNote(tempNotes);\n\n  }\n\n  const deleteNote = (id) => {\n    const tempNotes = [...note];\n\n    const index = tempNotes.findIndex((item) => item.id === id);\n\n    if (index < 0) return;\n\n    tempNotes.splice(index, 1);\n    setNote(tempNotes);\n\n  }\n\n  const updateText = (text, id) => {\n    const tempNotes = [...note];\n\n    const index = tempNotes.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    tempNotes[index].text = text;\n    setNote(tempNotes);\n  }\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(\n      localStorage.getItem('react-notes-app-data')\n    );\n\n    if (savedNotes) {\n      setNote(savedNotes);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\n      'react-notes-app-data',\n      JSON.stringify(note)\n    );\n  }, [note]);\n\n  return (\n    <div className=\"App\">\n      <SideMenu addNote={addNote} />\n      <NoteContainer handleSearchText={setSearchText} notes={note.filter((note) => note.text.toLowerCase().includes(searchText))} deleteNote={deleteNote} updateText={updateText} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}